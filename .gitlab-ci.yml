# © 2020 ETH Zurich, Mechanics and Materials Lab
# © 2020 California Institute of Technology
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

stages:
    - build

variables:
    DEBIAN_FRONTEND: noninteractive

build-debian:
    stage: build
    image: debian:buster
    before_script:
        - apt-get update && apt-get install -y cmake
        - apt-get update && apt-get install -y g++
        - apt-get update && apt-get install -y googletest
        - apt-get update && apt-get install -y libboost-program-options-dev
        - apt-get update && apt-get install -y libeigen3-dev
        - apt-get update && apt-get install -y ninja-build
        - apt-get update && apt-get install -y petsc-dev
        - apt-get update && apt-get install -y python3 python3-pip
        - pip3 install gcovr
        - >
            bash -c '
                cd $(mktemp -d) &&
                cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage" /usr/src/googletest &&
                cmake --build . &&
                cmake --build . --target install &&
                rm -rf $PWD
            '
    script:
        - useradd developer
        - mkdir build
        - chown developer:developer build
        - >
            su developer -c '
                cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage" . &&
                cmake --build build --target all &&
                CTEST_OUTPUT_ON_FAILURE=1 GTEST_OUTPUT="xml:gtest-results.xml" cmake --build build --target test &&
                python3 -m gcovr --print-summary --sonarqube coverage.xml -j$(nproc) --root . build
            '
    artifacts:
        reports:
            cobertura: coverage.xml
            junit: build/cpppetsc/test/gtest-results.xml
